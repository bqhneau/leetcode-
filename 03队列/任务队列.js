// 事件循环与任务队列 （先进先出）

setTimeout(()=>{
    console.log(2);
},0);
console.log(1);

// 结果：先打印1 再打印2

// 原因：
// js任务队列满足先进先出，js是单线程语言，为避免代码堵塞，
// 遇到异步任务（这里的定时器），就交给 webApi 进行处理
// 处理完（可以理解为变成同步任务）再次进入任务队列排队,依次执行
// 如此形成的循环 叫做 事件循环
